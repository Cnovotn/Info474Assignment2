var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('./style.css');
  var _hooksUseFetch = require("../hooks/useFetch");
  var _vegaEmbed = require('vega-embed');
  var _vegaEmbedDefault = _parcelHelpers.interopDefault(_vegaEmbed);
  var _jsxFileName = "/Users/claytonnovotney/Desktop/UW/Spring2021/Info474/Assignment2/Info474Assignment2/src/CreateVisual.js", _s = $RefreshSig$();
  function CreateVisual() {
    _s();
    const [index, setIndex] = _react.useState(0);
    const indexed = {
      "TeamWins": 0,
      "TeamSalary": 1
    };
    function nextVisual() {
      console.log("next index" + index);
      if (index == components.length) {
        setIndex(0);
      } else {
        setIndex(index + 1);
      }
    }
    function lastVisual() {
      console.log("last index" + index);
      if (index == -1) {
        setIndex(components.length - 1);
      } else {
        setIndex(index - 1);
      }
    }
    const githubDataURL = 'https://raw.githubusercontent.com/Cnovotn/Info474Assignment2/main/data/';
    const dataPoints = {
      "Wins": {
        "Endpoint": "franchisewins2001.csv",
        "X-Field": "Franchise",
        "Y-Field": "Wins",
        "Title": "2001 Total Wins For Each Franchise",
        "Description": "Description for the wins of 2001 teams"
      },
      "Strikeouts": {
        "Endpoint": "franchisestrikeouts-info474-QueryResult.csv",
        "X-Field": "Franchise",
        "Y-Field": "NumStrikeouts",
        "Title": "2001 Total Strikeouts For Each Franchise",
        "Description": "Description for the wins of 2001 teams"
      }
    };
    const [data, loading] = _hooksUseFetch.useFetch(githubDataURL + dataPoints["Wins"]["Endpoint"]);
    var thisDataInfo = dataPoints["Wins"];
    var vegaVariables = {
      "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
      "description": "A simple bar chart looking at all of the MLB franchises salary for 2001.",
      "title": thisDataInfo["Title"],
      "width": screen.width / 1.5,
      "height": "400",
      "data": {
        "values": data
      },
      "mark": {
        "type": "bar",
        "cornerRadiusEnd": 1
      },
      "encoding": {
        "x": {
          "field": thisDataInfo["X-Field"],
          "type": "nominal",
          "axis": {
            "labelAngle": -90
          }
        },
        "y": {
          "field": thisDataInfo["Y-Field"],
          "type": "quantitative"
        }
      }
    };
    _vegaEmbedDefault.default('#visualization', vegaVariables);
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "centered",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 66,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "visualization",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 67,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 68,
          columnNumber: 17
        }
      }, loading && "Loading the data!!!"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 69,
          columnNumber: 17
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "vis-description",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 71,
          columnNumber: 13
        }
      }, thisDataInfo["Description"]))
    );
  }
  _s(CreateVisual, "1CyPJ9H6BRPatdvG1TE6Om5G8Gs=", false, function () {
    return [_hooksUseFetch.useFetch];
  });
  _c = CreateVisual;
  exports.default = CreateVisual;
  var _c;
  $RefreshReg$(_c, "CreateVisual");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
