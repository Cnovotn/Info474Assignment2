var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('./style.css');
  var _hooksUseFetch = require("../hooks/useFetch");
  var _vegaEmbed = require('vega-embed');
  var _vegaEmbedDefault = _parcelHelpers.interopDefault(_vegaEmbed);
  var _jsxFileName = "/Users/claytonnovotney/Desktop/UW/Spring2021/Info474/Assignment2/Info474Assignment2/src/TestingGraphic.js", _s = $RefreshSig$();
  function TestingGraphic() {
    _s();
    const githubDataURL = 'https://raw.githubusercontent.com/Cnovotn/Info474Assignment2/main/data/franchiseBasedData.csv';
    const [data, loading] = _hooksUseFetch.useFetch(githubDataURL);
    const dataValues = {
      "Wins": "Wins",
      "Salary": "Salary",
      "Strikeouts": "NumStrikeouts",
      "Hits": "Hits",
      "Homeruns": "Homeruns",
      "RBI's": "RBIs",
      "PricePerHit": "PricePerHit",
      "PricePerHomerun": "PricePerHomerun"
    };
    var example = {
      "$schema": "https://vega.github.io/schema/vega/v5.json",
      "description": "A basic bar chart example, with value labels shown upon mouse hover.",
      "title": "Wins Per Franchise 2001",
      "width": screen.width / 1.5,
      "height": "400",
      "padding": 5,
      "data": [{
        "name": "table",
        "values": data
      }],
      "signals": [{
        "name": "tooltip",
        "value": {},
        "on": [{
          "events": "rect:mouseover",
          "update": "datum"
        }, {
          "events": "rect:mouseout",
          "update": "{}"
        }]
      }],
      "scales": [{
        "name": "xscale",
        "type": "band",
        "domain": {
          "data": "table",
          "field": "Franchise"
        },
        "range": "width",
        "padding": 0.05,
        "round": true
      }, {
        "name": "yscale",
        "domain": {
          "data": "table",
          "field": "Wins"
        },
        "nice": true,
        "range": "height"
      }],
      "axes": [{
        "orient": "bottom",
        "title": "Franchise",
        "scale": "xscale",
        "labelAngle": -75,
        "zindex": 5,
        "labelColor": "#FFCC00"
      }, {
        "orient": "left",
        "title": "Wins",
        "scale": "yscale"
      }],
      "marks": [{
        "type": "rect",
        "from": {
          "data": "table"
        },
        "encode": {
          "enter": {
            "x": {
              "scale": "xscale",
              "field": "Franchise"
            },
            "width": {
              "scale": "xscale",
              "band": 1
            },
            "y": {
              "scale": "yscale",
              "field": "Wins"
            },
            "y2": {
              "scale": "yscale",
              "value": 0
            }
          },
          "update": {
            "fill": {
              "value": "#002D72"
            }
          },
          "hover": {
            "fill": {
              "value": "#D50032"
            }
          }
        }
      }, {
        "type": "text",
        "encode": {
          "enter": {
            "align": {
              "value": "center"
            },
            "baseline": {
              "value": "bottom"
            },
            "fill": {
              "value": "#333"
            }
          },
          "update": {
            "x": {
              "scale": "xscale",
              "signal": "tooltip.Franchise",
              "band": 0.5
            },
            "y": {
              "scale": "yscale",
              "signal": "tooltip.Wins",
              "offset": 0
            },
            "text": {
              "signal": "tooltip.Wins"
            },
            "fillOpacity": [{
              "test": "datum === tooltip",
              "value": 0
            }, {
              "value": 1
            }]
          }
        }
      }]
    };
    var allData = {
      "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
      "description": "A scatterplot showing horsepower and miles per gallons for various cars.",
      "data": {
        "values": data
      },
      "mark": "circle",
      "width": screen.width / 1.5,
      "height": "400",
      "padding": 5,
      "layer": [{
        "mark": 'circle'
      }, {
        "mark": {
          "type": "text",
          "align": "center",
          "baseline": "line-bottom",
          "tooltip": {
            "content": "data"
          }
        },
        "encoding": {
          "text": {
            "field": "Franchise",
            "type": "nominal"
          }
        }
      }],
      "encoding": {
        "x": {
          "field": "Salary",
          "type": "quantitative",
          "scale": {
            "domain": [25000000, 130000000]
          }
        },
        "y": {
          "field": "Wins",
          "type": "quantitative",
          "scale": {
            "domain": [50, 130]
          }
        }
      }
    };
    // vegaEmbed('#big-graphic', example);
    _vegaEmbedDefault.default('#big-graphic-2', allData);
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "centered",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 136,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "big-graphic",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 137,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 138,
          columnNumber: 17
        }
      }, loading && "Loading the data!!!"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 139,
          columnNumber: 17
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "vis-description",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 141,
          columnNumber: 13
        }
      }, "Working with different types of graphical tools and interactive elements"), /*#__PURE__*/_reactDefault.default.createElement("div", {
        id: "big-graphic-2",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 144,
          columnNumber: 13
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("p", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 145,
          columnNumber: 17
        }
      }, loading && "Loading the data!!!"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 146,
          columnNumber: 17
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "vis-description",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 148,
          columnNumber: 13
        }
      }, "Looking at correlation between homeruns and wins"))
    );
  }
  _s(TestingGraphic, "Jm65JCcgUFoenM4DufkEA80vRVI=", false, function () {
    return [_hooksUseFetch.useFetch];
  });
  _c = TestingGraphic;
  exports.default = TestingGraphic;
  var _c;
  $RefreshReg$(_c, "TestingGraphic");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
